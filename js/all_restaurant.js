class DBHelper{static get DATABASE_URL(){return"http://localhost:1337/restaurants"}static get dB(){return DBHelper._dB?Promise.resolve(DBHelper._dB):new Promise((e,t)=>{const r=indexedDB.open("restaurant-reviews",2);r.onerror=(()=>t()),r.onupgradeneeded=(()=>{const e=r.result.createObjectStore("restaurants",{keyPath:"id"});e.createIndex("id","id"),e.createIndex("cuisine","cuisine_type"),e.createIndex("neighborhood","neighborhood")}),r.onsuccess=(t=>{DBHelper._dB=r.result,e(DBHelper._dB)})})}static putRestaurantsInDb(e){return DBHelper.dB.then(t=>{const r=t.transaction("restaurants","readwrite").objectStore("restaurants");e.forEach(e=>{r.put({id:e.id,restaurant:e})})}).catch(()=>{console.log(`Whoops! Couldn't set data: ${e}`)})}static getRestaurantsFromDb(e){return DBHelper.dB.then(t=>{const r=t.transaction("restaurants","readonly").objectStore("restaurants");return e?r.getAll(e):r.getAll()}).catch(()=>{console.log(`Whoops! Couldn't return data for restaurant ${e}`)})}static fetchRestaurants(e,t=""){let r=e;DBHelper.getRestaurantsFromDb(t).then(e=>{e&&e.length>0&&(r(null,e),r=(()=>{}))}).then(()=>fetch(`${DBHelper.DATABASE_URL}/${t}`)).then(e=>e.json()).then(e=>{Array.isArray(e)||(e=[e]),DBHelper.putRestaurantsInDb(e),r(null,e)}).catch(e=>{r(`Whoops! ${e.message}`,null)})}static fetchRestaurantById(e,t){DBHelper.fetchRestaurants((r,n)=>{if(r)t(r,null);else{const r=n.find(t=>t.id==e);r?t(null,r):t("Restaurant does not exist",null)}},e)}static fetchRestaurantByCuisine(e,t){DBHelper.fetchRestaurants((e,r)=>{if(e)t(e,null);else{const e=r.find(e=>e.id==id);e?t(null,e):t("Restaurant does not exist",null)}},id)}static fetchRestaurantByNeighborhood(e,t){DBHelper.fetchRestaurants((r,n)=>{if(r)t(r,null);else{const r=n.filter(t=>t.neighborhood==e);t(null,r)}})}static fetchRestaurantByCuisineAndNeighborhood(e,t,r){DBHelper.fetchRestaurants((n,a)=>{if(n)r(n,null);else{let n=a;"all"!=e&&(n=n.filter(t=>t.cuisine_type==e)),"all"!=t&&(n=n.filter(e=>e.neighborhood==t)),r(null,n)}})}static fetchNeighborhoods(e){DBHelper.fetchRestaurants((t,r)=>{if(t)e(t,null);else{const t=r.map((e,t)=>r[t].neighborhood),n=t.filter((e,r)=>t.indexOf(e)==r);e(null,n)}})}static fetchCuisines(e){DBHelper.fetchRestaurants((t,r)=>{if(t)e(t,null);else{const t=r.map((e,t)=>r[t].cuisine_type),n=t.filter((e,r)=>t.indexOf(e)==r);e(null,n)}})}static urlForRestaurant(e){return`./restaurant.html?id=${e.id}`}static imageUrlForRestaurant(e,t=""){return`/img/${e.id}${t}.webp`}static mapMarkerForRestaurant(e,t){return new google.maps.Marker({position:e.latlng,title:e.name,url:DBHelper.urlForRestaurant(e),map:t,animation:google.maps.Animation.DROP})}}
"serviceWorker"in navigator&&window.addEventListener("load",function(){navigator.serviceWorker.register("sw.js").then(function(e){console.log("ServiceWorker registration successful with scope: ",e.scope)},function(e){console.log("ServiceWorker registration failed: ",e)})});
let restaurant,map;window.initMap=(()=>{fetchRestaurantFromURL((e,t)=>{e?console.error(e):(self.map=new google.maps.Map(document.getElementById("map"),{zoom:16,center:t.latlng,scrollwheel:!1}),fillBreadcrumb(),DBHelper.mapMarkerForRestaurant(self.restaurant,self.map))})}),fetchRestaurantFromURL=(e=>{if(self.restaurant)return void e(null,self.restaurant);const t=getParameterByName("id");t?DBHelper.fetchRestaurantById(t,(t,a)=>{self.restaurant=a,a?(fillRestaurantHTML(),e(null,a)):console.error(t)}):e("No restaurant id in URL",null)}),fillRestaurantHTML=((e=self.restaurant)=>{const t=document.getElementById("restaurant-name");t.className="restaurant-name",t.innerHTML=e.name;const a=document.getElementById("restaurant-address");a.className="restaurant-address",a.setAttribute("aria-label","Address for "+e.name),a.innerHTML=e.address;const n=document.getElementById("restaurant-img");n.alt=`${e.name} - ${e.neighborhood}`,n.className="restaurant-img",n.src=DBHelper.imageUrlForRestaurant(e,"-md"),n.setAttribute("srcset",`${DBHelper.imageUrlForRestaurant(e)} 800w, ${DBHelper.imageUrlForRestaurant(e,"-md")} 600w, ${DBHelper.imageUrlForRestaurant(e,"-sm")} 300w`),n.setAttribute("sizes","(min-width: 1510px), (max-width: 15100px), (max-width: 840px)");const r=document.getElementById("restaurant-cuisine");r.className="restaurant-cuisine",a.setAttribute("aria-label","Cuisine Type"),r.innerHTML=e.cuisine_type,e.operating_hours&&fillRestaurantHoursHTML(),fillReviewsHTML()}),fillRestaurantHoursHTML=((e=self.restaurant.operating_hours)=>{const t=document.getElementById("restaurant-hours");t.className="restaurant-hours";for(let a in e){const n=document.createElement("tr"),r=document.createElement("td");r.innerHTML=a,n.appendChild(r);const s=document.createElement("td");s.innerHTML=e[a],n.appendChild(s),t.appendChild(n)}}),fillReviewsHTML=((e=self.restaurant.reviews)=>{const t=document.getElementById("reviews-container"),a=document.createElement("h2");if(a.innerHTML="Reviews",t.appendChild(a),!e){const e=document.createElement("p");return e.innerHTML="No reviews yet!",void t.appendChild(e)}const n=document.getElementById("reviews-list");e.forEach(e=>{n.appendChild(createReviewHTML(e))}),t.appendChild(n)}),createReviewHTML=(e=>{const t=document.createElement("li");t.className="review-container";const a=document.createElement("div");a.className="review-header",t.appendChild(a);const n=document.createElement("div");n.setAttribute("aria-label","Reviewer name"),n.className="review-name",n.innerHTML=e.name,a.appendChild(n);const r=document.createElement("div");r.setAttribute("aria-label","Review date"),r.className="review-date",r.innerHTML=e.date,a.appendChild(r);const s=document.createElement("p");s.setAttribute("aria-label","Review rating"),s.className="review-rating",s.innerHTML=`Rating: ${e.rating}`,t.appendChild(s);const l=document.createElement("p");return l.setAttribute("aria-label","Review comments"),l.className="review-comments",l.innerHTML=e.comments,t.appendChild(l),t}),fillBreadcrumb=((e=self.restaurant)=>{const t=document.getElementById("breadcrumb"),a=document.createElement("li");a.innerHTML=e.name,t.appendChild(a)}),getParameterByName=((e,t)=>{t||(t=window.location.href),e=e.replace(/[\[\]]/g,"\\$&");const a=new RegExp(`[?&]${e}(=([^&#]*)|&|#|$)`).exec(t);return a?a[2]?decodeURIComponent(a[2].replace(/\+/g," ")):"":null});